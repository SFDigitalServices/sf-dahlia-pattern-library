$td-reserved-light: lighten($splash-tint, 10%);
$td-reserved-lighter: lighten($splash-tint, 11%);
$td-reserved-inset: inset 3px 0px 0px 0px rgba(255,102,39,1);

table {
  width: 100%;

  thead {
    tr {
      th {
        font-weight: $table-value-weight;
        letter-spacing: .1rem;
        border-bottom: 1px solid $primary;
        text-transform: uppercase;

        @media #{$small-only} {
          padding-left: $table-padding-small;
          padding-right: $table-padding-small;
        }

        @media print {
          font-size: 12px;
          padding-top: 5px;
          padding-bottom: 5px;
        }
      }
    }
  }

  tbody {
    tr {
      td {
        font-weight: $table-value-weight;

        @media #{$small-only} {
          padding-left: $table-padding-small;
          padding-right: $table-padding-small;
        }

        @media print {
          font-size: 12px;
          padding-top: 5px;
          padding-bottom: 5px;
        }
      }
    }
  }

  caption {
    @include responsive-text-size('quark');
    color: $charcoal;
    font-family: $sans-font-family;
    font-weight: $t-bold;
    letter-spacing: .1rem;
    text-align: left;
    padding-bottom: .5rem;
    padding-left: .75rem;
    padding-top: .5rem;
    text-transform: uppercase;
  }

  small {
    font-weight: 400;
  }

  em {
    @include responsive-text-size('quark');
    text-transform: uppercase;
    letter-spacing: .1rem;
    font-style: normal;
  }

  // Remove zebra coloring and adds border
  &.plain {
    tr th {
      background-color: $dust;
      border-bottom: 0;
    }

    tr td {
      background: transparent;
      border-bottom: 1px solid $smoke;
    }

    tr {
      background: transparent
    }
  }

  // Uses gray and white striping
  &.td-bw {
    tr:nth-of-type(even) {
      background-color: $snow;
    }
  }

  &.td-highlight {
    background-color: $dust;

    tr td {
      border-bottom: 1px solid $smoke;
    }
  }

  // Shorten table cell spacing
  &.td-small {
    // border-bottom: 1px solid $smoke;

    tr td {
      padding: .75rem;

      &:first-child {
        width: rem-calc(100);
      }
    }
  }

  &.th-small {
    tr th {
      padding: 1.5rem .75rem;

      &:first-child {
        width: rem-calc(100);
      }
    }
  }

  &.td-nowrap {
    tbody tr td {
      @media #{$medium-up} {
        white-space: nowrap;
      }
    }
  }

  &.th-nowrap {
    thead tr th {
      @media #{$medium-up} {
        white-space: nowrap;
      }
    }
  }

  // lightens color of table contents
  &.td-light {
    tbody tr td {
      font-weight: normal;
    }
  }

  // removes header from table
  &.no-thead {
    thead {
      @include scut-hide-visually;
      height: auto;
      width: 100%;
    }

    tbody {
      border-top: 1px solid $smoke;
    }
  }

  // Smaller tables with dark headers and centered content
  &.table-results {
    tr th {
      color: $deep;
    }

    tr th,
    tr td {
      text-align: center;

      &:first-child {
        padding-left: 3rem;
      }

      &:last-child {
        padding-right: 3rem;
      }
    }
  }

  &.table-reserved {
    border-bottom: 0;

    tbody {
      border-top: 0;
    }

    thead tr {
      box-shadow: none;
      background-color: inherit;
    }

    caption {
      border-bottom: 1px solid $splash;
      background-color: $td-reserved-light;
      box-shadow: $td-reserved-inset;
    }

    tr {
      background-color: $white;
      border-bottom: 0;

      &:nth-of-type(even) {
        background-color: $td-reserved-light;
      }

      td:first-of-type {
        box-shadow: $td-reserved-inset;
      }
    }
  }

  // Calling out reserved units
  tr.tr-reserved {
    background-color: $td-reserved-light;
    border-bottom: 1px solid $white;

    &:nth-of-type(even) {
      background-color: $td-reserved-lighter;
    }

    td:first-of-type {
      box-shadow: $td-reserved-inset;
    }
  }
}


// More practical CSS...
// using mobile first method (IE8,7 requires respond.js polyfill https://github.com/scottjehl/Respond)

.table-flex {
  tr {
    &:nth-of-type(even) {
      @media #{$small-only} {
        background: transparent;
      }
    }

    // support resverved unit tinting within flexible table
    &.tr-reserved {
      @media #{$small-only} {
        td {
          box-shadow: $td-reserved-inset;
          background-color: $td-reserved-light;

          &:nth-of-type(even) {
            background-color: $td-reserved-lighter;
          }
        }
      }
    }
  }

  td,
  tbody th {
    display: block;

    @media #{$small-only} {
      padding-bottom: .5rem;
      padding-left: 1rem;
      padding-right: 1rem;
      padding-top: .5rem;
      text-align: right;

      &:first-child {
        padding-top: 1rem;
      }

      &:last-child {
        padding-bottom: 1rem;
      }

      &:nth-of-type(odd) {
        background-color: $dust;
      }

      &.tr {
        @include responsive-text-size('base');
        background: transparent;
        text-align: left;

        &:before {
          display: none;
        }
      }

      .h-small {
        @include h-caps();
        @include responsive-text-size('small');
        color: $oil;
        padding-bottom: .5rem;
      }
    }

    &:before {
      content: attr(data-th)""; // who knew you could do this? The internet, that's who.
      color: $oil;
      display: block;
      float: left;
      font-family: $alt-font-family;
      font-weight: 700;
      text-align: left;

      // optional stuff to make it look nicer
      width: 8.5rem; // magic number :( adjust according to your own content

      @media #{$small-only} {
        @include responsive-text-size('tiny');
        text-transform: uppercase;
        letter-spacing: $small-header-spacing;
      }

      @media #{$medium-up} {
        display: none;
      }

      @media print {
        display: none;
      }
    }
  }

  thead th {
    @media #{$small-only} {
      @include sr-only();
    }
  }

  th, td {
    @media #{$medium-up} {
      display: table-cell;
    }

    @media print {
      display: table-cell;
    }
  }
}

// // Result set
// // List psuedo table
// .result-set {
//   width: 100%;
//   overflow: hidden;

//   li {
//     overflow: hidden;
//     padding: .5rem;
//     border-bottom: 1px solid $smoke;
//     position: relative;
//     width: 100%;

//     .right {
//       display: inline-block;
//       width: 50%;
//     }
//   }
// }
